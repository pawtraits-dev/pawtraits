-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.breed_coats (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  breed_id uuid NOT NULL,
  coat_id uuid NOT NULL,
  is_common boolean DEFAULT true,
  is_standard boolean DEFAULT true,
  popularity_rank integer,
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT breed_coats_pkey PRIMARY KEY (id),
  CONSTRAINT breed_coats_breed_id_fkey FOREIGN KEY (breed_id) REFERENCES public.breeds(id),
  CONSTRAINT breed_coats_coat_id_fkey FOREIGN KEY (coat_id) REFERENCES public.coats(id)
);
CREATE TABLE public.breeds (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text NOT NULL,
  physical_traits jsonb DEFAULT '{}'::jsonb,
  personality_traits ARRAY,
  alternative_names ARRAY,
  popularity_rank integer,
  is_active boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT breeds_pkey PRIMARY KEY (id)
);
CREATE TABLE public.client_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_email text NOT NULL,
  referral_id uuid,
  partner_id uuid,
  order_value numeric NOT NULL,
  discount_applied numeric DEFAULT 0,
  is_initial_order boolean DEFAULT true,
  commission_rate numeric,
  commission_amount numeric,
  commission_paid boolean DEFAULT false,
  payment_id uuid,
  order_items jsonb,
  order_status text DEFAULT 'pending'::text CHECK (order_status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'cancelled'::text, 'refunded'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT client_orders_pkey PRIMARY KEY (id),
  CONSTRAINT client_orders_referral_id_fkey FOREIGN KEY (referral_id) REFERENCES public.referrals(id),
  CONSTRAINT client_orders_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.partners(id),
  CONSTRAINT client_orders_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES public.commission_payments(id)
);
CREATE TABLE public.coats (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text,
  hex_color text,
  pattern_type text,
  rarity text DEFAULT 'common'::text,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT coats_pkey PRIMARY KEY (id)
);
CREATE TABLE public.commission_payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  partner_id uuid NOT NULL,
  payment_period_start date NOT NULL,
  payment_period_end date NOT NULL,
  total_amount numeric NOT NULL,
  referral_count integer NOT NULL DEFAULT 0,
  initial_commission_amount numeric DEFAULT 0,
  lifetime_commission_amount numeric DEFAULT 0,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'processing'::text, 'paid'::text, 'failed'::text, 'cancelled'::text])),
  payment_method text NOT NULL,
  payment_details jsonb,
  failure_reason text,
  paid_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT commission_payments_pkey PRIMARY KEY (id),
  CONSTRAINT commission_payments_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.partners(id)
);
CREATE TABLE public.format_theme_combinations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  format_id uuid,
  theme_id uuid,
  compatibility_score integer DEFAULT 5,
  custom_adjustments text,
  is_recommended boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT format_theme_combinations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.formats (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text NOT NULL,
  aspect_ratio text NOT NULL,
  use_case text NOT NULL,
  prompt_adjustments text,
  midjourney_parameters text DEFAULT '--style raw --v 6'::text,
  technical_specs jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT formats_pkey PRIMARY KEY (id)
);
CREATE TABLE public.generated_prompts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  breed_id uuid,
  theme_id uuid,
  style_id uuid,
  format_id uuid,
  template_id uuid,
  final_prompt text NOT NULL,
  generation_parameters jsonb DEFAULT '{}'::jsonb,
  quality_rating integer,
  notes text,
  generated_image_urls ARRAY,
  is_approved boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT generated_prompts_pkey PRIMARY KEY (id),
  CONSTRAINT generated_prompts_theme_id_fkey FOREIGN KEY (theme_id) REFERENCES public.themes(id),
  CONSTRAINT generated_prompts_breed_id_fkey FOREIGN KEY (breed_id) REFERENCES public.breeds(id),
  CONSTRAINT generated_prompts_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.prompt_templates(id),
  CONSTRAINT generated_prompts_format_id_fkey FOREIGN KEY (format_id) REFERENCES public.formats(id),
  CONSTRAINT generated_prompts_style_id_fkey FOREIGN KEY (style_id) REFERENCES public.styles(id)
);
CREATE TABLE public.image_catalog (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  filename text NOT NULL,
  original_filename text NOT NULL,
  file_size integer NOT NULL,
  mime_type text NOT NULL,
  storage_path text NOT NULL,
  public_url text NOT NULL,
  prompt_text text NOT NULL,
  description text,
  tags ARRAY DEFAULT '{}'::text[],
  breed_id uuid,
  theme_id uuid,
  style_id uuid,
  format_id uuid,
  coat_id uuid,
  ai_model text,
  generation_parameters jsonb DEFAULT '{}'::jsonb,
  rating integer CHECK (rating >= 1 AND rating <= 5),
  is_featured boolean DEFAULT false,
  is_public boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT image_catalog_pkey PRIMARY KEY (id),
  CONSTRAINT image_catalog_breed_id_fkey FOREIGN KEY (breed_id) REFERENCES public.breeds(id),
  CONSTRAINT image_catalog_theme_id_fkey FOREIGN KEY (theme_id) REFERENCES public.themes(id),
  CONSTRAINT image_catalog_style_id_fkey FOREIGN KEY (style_id) REFERENCES public.styles(id),
  CONSTRAINT image_catalog_format_id_fkey FOREIGN KEY (format_id) REFERENCES public.formats(id),
  CONSTRAINT image_catalog_coat_id_fkey FOREIGN KEY (coat_id) REFERENCES public.coats(id)
);
CREATE TABLE public.partners (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email text NOT NULL UNIQUE,
  first_name text NOT NULL,
  last_name text NOT NULL,
  phone text,
  business_name text,
  business_type text CHECK (business_type = ANY (ARRAY['groomer'::text, 'breeder'::text, 'vet'::text, 'salon'::text, 'mobile'::text, 'independent'::text, 'chain'::text])),
  business_address jsonb,
  business_phone text,
  business_website text,
  bio text,
  avatar_url text,
  is_active boolean DEFAULT true,
  is_verified boolean DEFAULT false,
  onboarding_completed boolean DEFAULT false,
  payment_method text CHECK (payment_method = ANY (ARRAY['paypal'::text, 'bank_transfer'::text])),
  payment_details jsonb,
  notification_preferences jsonb DEFAULT '{"sms_enabled": false, "email_referrals": true, "email_commissions": true}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  approval_status text DEFAULT 'pending'::text CHECK (approval_status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text, 'suspended'::text])),
  approved_by uuid,
  approved_at timestamp with time zone,
  rejection_reason text,
  last_login_at timestamp with time zone,
  CONSTRAINT partners_pkey PRIMARY KEY (id)
);
CREATE TABLE public.prompt_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  description text,
  template text NOT NULL,
  variables jsonb NOT NULL,
  ai_platform text NOT NULL DEFAULT 'midjourney'::text,
  version text DEFAULT 'v1'::text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT prompt_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.referral_analytics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  referral_id uuid NOT NULL,
  event_type text NOT NULL CHECK (event_type = ANY (ARRAY['qr_scan'::text, 'email_open'::text, 'link_click'::text, 'page_view'::text, 'order_start'::text, 'order_complete'::text])),
  event_data jsonb,
  ip_address inet,
  user_agent text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT referral_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT referral_analytics_referral_id_fkey FOREIGN KEY (referral_id) REFERENCES public.referrals(id)
);
CREATE TABLE public.referrals (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  partner_id uuid NOT NULL,
  referral_code text NOT NULL UNIQUE,
  client_name text NOT NULL,
  client_email text NOT NULL,
  client_phone text,
  client_notes text,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'viewed'::text, 'clicked'::text, 'purchased'::text, 'expired'::text])),
  qr_code_url text,
  qr_scans integer DEFAULT 0,
  email_opens integer DEFAULT 0,
  last_viewed_at timestamp with time zone,
  order_id uuid,
  order_value numeric,
  discount_amount numeric,
  commission_rate numeric DEFAULT 20.00,
  lifetime_commission_rate numeric DEFAULT 5.00,
  commission_amount numeric,
  commission_paid boolean DEFAULT false,
  expires_at timestamp with time zone DEFAULT (now() + '30 days'::interval),
  purchased_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT referrals_pkey PRIMARY KEY (id),
  CONSTRAINT referrals_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.partners(id)
);
CREATE TABLE public.styles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text NOT NULL,
  prompt_suffix text NOT NULL,
  technical_parameters jsonb DEFAULT '{}'::jsonb,
  compatible_themes ARRAY,
  difficulty_level integer DEFAULT 1,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  midjourney_sref text,
  reference_image_url text,
  CONSTRAINT styles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.theme_style_combinations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  theme_id uuid,
  style_id uuid,
  compatibility_score integer DEFAULT 5,
  custom_prompt_adjustments text,
  example_tags ARRAY,
  is_recommended boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT theme_style_combinations_pkey PRIMARY KEY (id),
  CONSTRAINT theme_style_combinations_style_id_fkey FOREIGN KEY (style_id) REFERENCES public.styles(id),
  CONSTRAINT theme_style_combinations_theme_id_fkey FOREIGN KEY (theme_id) REFERENCES public.themes(id)
);
CREATE TABLE public.themes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text NOT NULL,
  base_prompt_template text NOT NULL,
  style_keywords ARRAY,
  seasonal_relevance jsonb DEFAULT '{}'::jsonb,
  difficulty_level integer DEFAULT 1,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT themes_pkey PRIMARY KEY (id)
);