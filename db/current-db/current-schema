-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.api_keys (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  key_name text NOT NULL CHECK (char_length(key_name) >= 1 AND char_length(key_name) <= 255),
  key_hash text NOT NULL UNIQUE CHECK (char_length(key_hash) >= 10),
  permissions ARRAY DEFAULT '{}'::text[],
  is_active boolean DEFAULT true,
  expires_at timestamp with time zone,
  last_used_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT api_keys_pkey PRIMARY KEY (id),
  CONSTRAINT api_keys_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT api_keys_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.audit_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_type text NOT NULL CHECK (event_type = ANY (ARRAY['AUTHENTICATION'::text, 'AUTHORIZATION'::text, 'DATA_ACCESS'::text, 'DATA_MODIFICATION'::text, 'DATA_DELETION'::text, 'SYSTEM_ACCESS'::text, 'SECURITY_INCIDENT'::text, 'PRIVACY_EVENT'::text, 'COMPLIANCE_EVENT'::text, 'ADMIN_ACTION'::text, 'API_ACCESS'::text, 'FILE_OPERATION'::text, 'PAYMENT_EVENT'::text])),
  severity text NOT NULL CHECK (severity = ANY (ARRAY['LOW'::text, 'MEDIUM'::text, 'HIGH'::text, 'CRITICAL'::text])),
  user_id uuid,
  session_id text,
  ip_address inet,
  user_agent text,
  resource text,
  action text NOT NULL CHECK (char_length(action) >= 1 AND char_length(action) <= 255),
  resource_id text,
  event_details jsonb DEFAULT '{}'::jsonb CHECK (event_details IS NOT NULL),
  outcome text NOT NULL CHECK (outcome = ANY (ARRAY['SUCCESS'::text, 'FAILURE'::text, 'PARTIAL'::text, 'BLOCKED'::text])),
  risk_score integer CHECK (risk_score >= 0 AND risk_score <= 100),
  compliance_flags ARRAY DEFAULT '{}'::text[],
  timestamp timestamp with time zone NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT audit_events_pkey PRIMARY KEY (id),
  CONSTRAINT audit_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.audit_rules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  rule_name text NOT NULL UNIQUE CHECK (char_length(rule_name) >= 1 AND char_length(rule_name) <= 255),
  event_type text NOT NULL,
  conditions jsonb NOT NULL DEFAULT '[]'::jsonb,
  actions jsonb NOT NULL DEFAULT '[]'::jsonb,
  is_active boolean DEFAULT true,
  priority integer DEFAULT 0 CHECK (priority >= 0 AND priority <= 1000),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT audit_rules_pkey PRIMARY KEY (id),
  CONSTRAINT audit_rules_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.batch_job_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_id uuid NOT NULL,
  item_index integer NOT NULL,
  breed_id uuid,
  coat_id uuid,
  outfit_id uuid,
  format_id uuid,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'running'::text, 'completed'::text, 'failed'::text, 'skipped'::text])),
  generated_image_id uuid,
  error_message text,
  gemini_duration_ms integer,
  total_duration_ms integer,
  retry_count integer DEFAULT 0,
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT batch_job_items_pkey PRIMARY KEY (id),
  CONSTRAINT batch_job_items_generated_image_id_fkey FOREIGN KEY (generated_image_id) REFERENCES public.image_catalog(id),
  CONSTRAINT batch_job_items_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.batch_jobs(id)
);
CREATE TABLE public.batch_jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_type text NOT NULL DEFAULT 'image_generation'::text,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'running'::text, 'completed'::text, 'failed'::text, 'cancelled'::text])),
  original_image_id uuid,
  config jsonb NOT NULL,
  target_age text,
  total_items integer NOT NULL DEFAULT 0,
  completed_items integer NOT NULL DEFAULT 0,
  successful_items integer NOT NULL DEFAULT 0,
  failed_items integer NOT NULL DEFAULT 0,
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  estimated_completion_at timestamp with time zone,
  generated_image_ids ARRAY DEFAULT '{}'::uuid[],
  error_log ARRAY,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid,
  CONSTRAINT batch_jobs_pkey PRIMARY KEY (id),
  CONSTRAINT batch_jobs_original_image_id_fkey FOREIGN KEY (original_image_id) REFERENCES public.image_catalog(id)
);
CREATE TABLE public.breed_coats (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  breed_id uuid NOT NULL,
  coat_id uuid NOT NULL,
  is_common boolean DEFAULT true,
  is_standard boolean DEFAULT true,
  popularity_rank integer,
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT breed_coats_pkey PRIMARY KEY (id),
  CONSTRAINT breed_coats_breed_id_fkey FOREIGN KEY (breed_id) REFERENCES public.breeds(id),
  CONSTRAINT breed_coats_coat_id_fkey FOREIGN KEY (coat_id) REFERENCES public.coats(id)
);
CREATE TABLE public.breeds (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text NOT NULL,
  physical_traits jsonb DEFAULT '{}'::jsonb,
  personality_traits ARRAY,
  alternative_names ARRAY,
  popularity_rank integer,
  is_active boolean DEFAULT true,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  animal_type text NOT NULL DEFAULT 'dog'::text CHECK (animal_type = ANY (ARRAY['dog'::text, 'cat'::text])),
  hero_image_url text,
  hero_image_alt text,
  CONSTRAINT breeds_pkey PRIMARY KEY (id)
);
CREATE TABLE public.carousel_content_selections (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  carousel_id uuid NOT NULL,
  content_type character varying NOT NULL CHECK (content_type::text = ANY (ARRAY['theme'::character varying, 'dog_breed'::character varying, 'cat_breed'::character varying]::text[])),
  content_id uuid NOT NULL,
  sort_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  custom_title character varying,
  custom_subtitle character varying,
  custom_description text,
  custom_cta_text character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT carousel_content_selections_pkey PRIMARY KEY (id),
  CONSTRAINT carousel_content_selections_carousel_id_fkey FOREIGN KEY (carousel_id) REFERENCES public.carousels(id)
);
CREATE TABLE public.carousel_slides (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  carousel_id uuid NOT NULL,
  image_url character varying NOT NULL,
  image_alt text,
  cloudinary_public_id character varying,
  title character varying,
  subtitle character varying,
  description text,
  cta_text character varying,
  cta_url character varying,
  cta_style character varying DEFAULT 'primary'::character varying CHECK (cta_style::text = ANY (ARRAY['primary'::character varying, 'secondary'::character varying, 'outline'::character varying]::text[])),
  text_position character varying DEFAULT 'center'::character varying CHECK (text_position::text = ANY (ARRAY['center'::character varying, 'left'::character varying, 'right'::character varying, 'bottom-left'::character varying, 'bottom-center'::character varying, 'bottom-right'::character varying, 'top-left'::character varying, 'top-right'::character varying]::text[])),
  text_color character varying DEFAULT 'white'::character varying CHECK (text_color::text = ANY (ARRAY['white'::character varying, 'black'::character varying, 'purple'::character varying, 'blue'::character varying]::text[])),
  show_overlay boolean DEFAULT true,
  overlay_opacity integer DEFAULT 40 CHECK (overlay_opacity >= 0 AND overlay_opacity <= 100),
  sort_order integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT carousel_slides_pkey PRIMARY KEY (id),
  CONSTRAINT carousel_slides_carousel_id_fkey FOREIGN KEY (carousel_id) REFERENCES public.carousels(id),
  CONSTRAINT carousel_slides_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.carousels (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  page_type character varying NOT NULL CHECK (page_type::text = ANY (ARRAY['home'::character varying, 'dogs'::character varying, 'cats'::character varying, 'themes'::character varying]::text[])),
  description text,
  is_active boolean DEFAULT true,
  auto_play_interval integer DEFAULT 6000,
  show_thumbnails boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT carousels_pkey PRIMARY KEY (id),
  CONSTRAINT carousels_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.cart_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  product_id text NOT NULL,
  image_id uuid NOT NULL,
  image_url text NOT NULL,
  image_title text NOT NULL,
  quantity integer NOT NULL DEFAULT 1 CHECK (quantity > 0),
  pricing_data jsonb NOT NULL,
  product_data jsonb NOT NULL,
  partner_id uuid,
  discount_code text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cart_items_pkey PRIMARY KEY (id),
  CONSTRAINT cart_items_image_id_fkey FOREIGN KEY (image_id) REFERENCES public.image_catalog(id),
  CONSTRAINT cart_items_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.partners(id)
);
CREATE TABLE public.client_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_email text NOT NULL,
  referral_id uuid,
  partner_id uuid,
  order_value numeric NOT NULL,
  discount_applied numeric DEFAULT 0,
  is_initial_order boolean DEFAULT true,
  commission_rate numeric,
  commission_amount numeric,
  commission_paid boolean DEFAULT false,
  payment_id uuid,
  order_items jsonb,
  order_status text DEFAULT 'pending'::text CHECK (order_status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'cancelled'::text, 'refunded'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  customer_id uuid,
  order_type text,
  order_id uuid,
  client_name text,
  CONSTRAINT client_orders_pkey PRIMARY KEY (id),
  CONSTRAINT client_orders_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT client_orders_referral_id_fkey FOREIGN KEY (referral_id) REFERENCES public.referrals(id),
  CONSTRAINT client_orders_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.partners(id),
  CONSTRAINT client_orders_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES public.commission_payments(id),
  CONSTRAINT client_orders_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.coats (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text,
  hex_color text,
  pattern_type text,
  rarity text DEFAULT 'common'::text,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  animal_type text NOT NULL DEFAULT 'dog'::text CHECK (animal_type = ANY (ARRAY['dog'::text, 'cat'::text])),
  hero_image_url text,
  hero_image_alt text,
  CONSTRAINT coats_pkey PRIMARY KEY (id)
);
CREATE TABLE public.commission_payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  partner_id uuid NOT NULL,
  payment_period_start date NOT NULL,
  payment_period_end date NOT NULL,
  total_amount numeric NOT NULL,
  referral_count integer NOT NULL DEFAULT 0,
  initial_commission_amount numeric DEFAULT 0,
  lifetime_commission_amount numeric DEFAULT 0,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'processing'::text, 'paid'::text, 'failed'::text, 'cancelled'::text])),
  payment_method text NOT NULL,
  payment_details jsonb,
  failure_reason text,
  paid_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT commission_payments_pkey PRIMARY KEY (id),
  CONSTRAINT commission_payments_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.partners(id)
);
CREATE TABLE public.countries (
  code text NOT NULL,
  name text NOT NULL,
  currency_code text NOT NULL,
  currency_symbol text NOT NULL,
  is_supported boolean DEFAULT true,
  shipping_zone text,
  tax_rate_percent numeric DEFAULT 0,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT countries_pkey PRIMARY KEY (code)
);
CREATE TABLE public.customer_credit_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_id uuid NOT NULL,
  transaction_type character varying NOT NULL CHECK (transaction_type::text = ANY (ARRAY['earned'::character varying, 'used'::character varying, 'expired'::character varying, 'refunded'::character varying]::text[])),
  amount integer NOT NULL,
  balance_after integer NOT NULL,
  reference_type character varying,
  reference_id uuid,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customer_credit_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT customer_credit_transactions_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.customer_credits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_id uuid NOT NULL UNIQUE,
  total_earned integer DEFAULT 0 CHECK (total_earned >= 0),
  total_used integer DEFAULT 0 CHECK (total_used >= 0),
  available_balance integer DEFAULT 0 CHECK (available_balance >= 0),
  pending_credits integer DEFAULT 0,
  last_credit_earned_at timestamp with time zone,
  last_credit_used_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customer_credits_pkey PRIMARY KEY (id),
  CONSTRAINT customer_credits_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.customer_referrals (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  referrer_customer_id uuid NOT NULL,
  referee_customer_id uuid,
  referral_code character varying NOT NULL UNIQUE CHECK (referral_code::text ~ '^[A-Z0-9]{8,20}$'::text),
  referee_email character varying,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'accessed'::character varying, 'signed_up'::character varying, 'purchased'::character varying, 'credited'::character varying, 'expired'::character varying]::text[])),
  discount_amount integer,
  credit_amount integer,
  order_id uuid,
  order_value integer,
  expires_at timestamp with time zone DEFAULT (now() + '90 days'::interval),
  accessed_at timestamp with time zone,
  signed_up_at timestamp with time zone,
  purchased_at timestamp with time zone,
  credited_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  qr_scans_count integer NOT NULL DEFAULT 0,
  CONSTRAINT customer_referrals_pkey PRIMARY KEY (id),
  CONSTRAINT customer_referrals_referrer_customer_id_fkey FOREIGN KEY (referrer_customer_id) REFERENCES public.customers(id),
  CONSTRAINT customer_referrals_referee_customer_id_fkey FOREIGN KEY (referee_customer_id) REFERENCES public.customers(id),
  CONSTRAINT customer_referrals_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email text NOT NULL UNIQUE,
  first_name text,
  last_name text,
  phone text,
  user_id uuid,
  is_registered boolean DEFAULT false,
  pets jsonb DEFAULT '[]'::jsonb,
  marketing_consent boolean DEFAULT false,
  email_notifications boolean DEFAULT true,
  sms_notifications boolean DEFAULT false,
  total_orders integer DEFAULT 0,
  total_spent numeric DEFAULT 0,
  first_order_date timestamp with time zone,
  last_order_date timestamp with time zone,
  referred_by_partner_id uuid,
  referral_code text,
  referral_date timestamp with time zone,
  notes text,
  tags ARRAY DEFAULT '{}'::text[],
  customer_status text DEFAULT 'active'::text CHECK (customer_status = ANY (ARRAY['active'::text, 'inactive'::text, 'blocked'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  personal_referral_code character varying UNIQUE,
  total_credits_earned integer DEFAULT 0,
  current_credit_balance integer DEFAULT 0,
  total_referrals integer DEFAULT 0,
  successful_referrals integer DEFAULT 0,
  rewards_earned numeric DEFAULT 0.00,
  signup_discount_used integer DEFAULT 0,
  CONSTRAINT customers_pkey PRIMARY KEY (id),
  CONSTRAINT customers_referred_by_partner_id_fkey FOREIGN KEY (referred_by_partner_id) REFERENCES public.partners(id)
);
CREATE TABLE public.data_protection_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  event_type text NOT NULL CHECK (event_type = ANY (ARRAY['CONSENT_GIVEN'::text, 'CONSENT_WITHDRAWN'::text, 'DATA_EXPORT_REQUEST'::text, 'DATA_DELETION_REQUEST'::text, 'DATA_ANONYMIZATION'::text, 'DATA_BREACH_NOTIFICATION'::text, 'RIGHT_TO_RECTIFICATION'::text, 'RIGHT_TO_PORTABILITY'::text])),
  data_categories ARRAY NOT NULL,
  legal_basis text,
  processed_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone,
  status text NOT NULL DEFAULT 'PENDING'::text CHECK (status = ANY (ARRAY['PENDING'::text, 'PROCESSING'::text, 'COMPLETED'::text, 'FAILED'::text])),
  details jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT data_protection_events_pkey PRIMARY KEY (id),
  CONSTRAINT data_protection_events_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT data_protection_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.format_theme_combinations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  format_id uuid,
  theme_id uuid,
  compatibility_score integer DEFAULT 5,
  custom_adjustments text,
  is_recommended boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT format_theme_combinations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.formats (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text NOT NULL,
  aspect_ratio text NOT NULL,
  use_case text NOT NULL,
  prompt_adjustments text,
  midjourney_parameters text DEFAULT '--style raw --v 6'::text,
  technical_specs jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  size_code text,
  width_cm numeric,
  height_cm numeric,
  is_square boolean DEFAULT false,
  display_order integer DEFAULT 0,
  CONSTRAINT formats_pkey PRIMARY KEY (id)
);
CREATE TABLE public.generated_prompts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  breed_id uuid,
  theme_id uuid,
  style_id uuid,
  format_id uuid,
  template_id uuid,
  final_prompt text NOT NULL,
  generation_parameters jsonb DEFAULT '{}'::jsonb,
  quality_rating integer,
  notes text,
  generated_image_urls ARRAY,
  is_approved boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT generated_prompts_pkey PRIMARY KEY (id),
  CONSTRAINT generated_prompts_breed_id_fkey FOREIGN KEY (breed_id) REFERENCES public.breeds(id),
  CONSTRAINT generated_prompts_theme_id_fkey FOREIGN KEY (theme_id) REFERENCES public.themes(id),
  CONSTRAINT generated_prompts_style_id_fkey FOREIGN KEY (style_id) REFERENCES public.styles(id),
  CONSTRAINT generated_prompts_format_id_fkey FOREIGN KEY (format_id) REFERENCES public.formats(id),
  CONSTRAINT generated_prompts_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.prompt_templates(id)
);
CREATE TABLE public.image_catalog (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  filename text NOT NULL,
  original_filename text NOT NULL,
  file_size integer NOT NULL,
  mime_type text NOT NULL,
  storage_path text NOT NULL,
  public_url text NOT NULL,
  prompt_text text NOT NULL,
  description text,
  tags ARRAY DEFAULT '{}'::text[],
  breed_id uuid,
  theme_id uuid,
  style_id uuid,
  format_id uuid,
  coat_id uuid,
  ai_model text,
  generation_parameters jsonb DEFAULT '{}'::jsonb,
  rating integer CHECK (rating >= 1 AND rating <= 5),
  is_featured boolean DEFAULT false,
  is_public boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  share_count integer DEFAULT 0,
  last_shared_at timestamp with time zone,
  like_count integer DEFAULT 0,
  view_count integer DEFAULT 0,
  last_liked_at timestamp with time zone,
  last_viewed_at timestamp with time zone,
  cloudinary_public_id text,
  cloudinary_version character varying,
  cloudinary_signature text,
  image_variants jsonb DEFAULT '{}'::jsonb,
  access_level text DEFAULT 'public'::text,
  migration_status text DEFAULT 'pending'::text,
  migrated_at timestamp with time zone,
  CONSTRAINT image_catalog_pkey PRIMARY KEY (id),
  CONSTRAINT image_catalog_breed_id_fkey FOREIGN KEY (breed_id) REFERENCES public.breeds(id),
  CONSTRAINT image_catalog_theme_id_fkey FOREIGN KEY (theme_id) REFERENCES public.themes(id),
  CONSTRAINT image_catalog_style_id_fkey FOREIGN KEY (style_id) REFERENCES public.styles(id),
  CONSTRAINT image_catalog_format_id_fkey FOREIGN KEY (format_id) REFERENCES public.formats(id),
  CONSTRAINT image_catalog_coat_id_fkey FOREIGN KEY (coat_id) REFERENCES public.coats(id)
);
CREATE TABLE public.interaction_analytics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  image_id uuid NOT NULL,
  total_likes integer DEFAULT 0,
  total_unlikes integer DEFAULT 0,
  net_likes integer DEFAULT 0,
  total_shares integer DEFAULT 0,
  total_views integer DEFAULT 0,
  unique_users integer DEFAULT 0,
  unique_likers integer DEFAULT 0,
  unique_sharers integer DEFAULT 0,
  unique_viewers integer DEFAULT 0,
  first_interaction_at timestamp with time zone,
  last_interaction_at timestamp with time zone,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT interaction_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT interaction_analytics_image_id_fkey FOREIGN KEY (image_id) REFERENCES public.image_catalog(id)
);
CREATE TABLE public.media (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  slug text NOT NULL UNIQUE,
  description text,
  category text,
  material_type text,
  finish_type text,
  thickness_mm numeric,
  indoor_outdoor text CHECK (indoor_outdoor = ANY (ARRAY['indoor'::text, 'outdoor'::text, 'both'::text])),
  uv_resistant boolean DEFAULT false,
  water_resistant boolean DEFAULT false,
  care_instructions text,
  is_active boolean DEFAULT true,
  is_featured boolean DEFAULT false,
  gelato_category text,
  base_cost_multiplier numeric DEFAULT 1.0,
  meta_title text,
  meta_description text,
  preview_image_url text,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT media_pkey PRIMARY KEY (id)
);
CREATE TABLE public.order_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid NOT NULL,
  product_id text NOT NULL,
  image_id text NOT NULL,
  image_title text NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  captured_product_cost integer DEFAULT 0,
  captured_shipping_cost integer DEFAULT 0,
  captured_ai_cost integer DEFAULT 0,
  captured_processing_fee integer DEFAULT 0,
  captured_commission_rate numeric DEFAULT 0,
  captured_commission_amount integer DEFAULT 0,
  captured_total_cost integer DEFAULT 0,
  captured_gross_profit integer DEFAULT 0,
  cost_captured_at timestamp without time zone DEFAULT now(),
  pricing_snapshot_id uuid,
  product_data jsonb DEFAULT '{}'::jsonb,
  print_image_url text,
  image_url text,
  unit_price integer,
  total_price integer,
  original_price integer,
  CONSTRAINT order_items_pkey PRIMARY KEY (id),
  CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.orders (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_number text NOT NULL UNIQUE,
  status text NOT NULL DEFAULT 'confirmed'::text,
  customer_email text NOT NULL,
  shipping_first_name text NOT NULL,
  shipping_last_name text NOT NULL,
  shipping_address text NOT NULL,
  shipping_city text NOT NULL,
  shipping_postcode text NOT NULL,
  shipping_country text NOT NULL DEFAULT 'United Kingdom'::text,
  subtotal_amount integer NOT NULL,
  shipping_amount integer NOT NULL DEFAULT 0,
  total_amount integer NOT NULL,
  currency text NOT NULL DEFAULT 'GBP'::text,
  estimated_delivery timestamp with time zone,
  tracking_number text,
  notes text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  payment_intent_id text,
  payment_status text DEFAULT 'pending'::text CHECK (payment_status = ANY (ARRAY['pending'::text, 'paid'::text, 'failed'::text, 'canceled'::text])),
  gelato_order_id text,
  gelato_status text CHECK (gelato_status IS NULL OR (gelato_status = ANY (ARRAY['pending'::text, 'processing'::text, 'shipped'::text, 'delivered'::text, 'error'::text]))),
  error_message text,
  placed_by_partner_id uuid,
  client_email character varying,
  client_name character varying,
  order_type character varying DEFAULT 'customer'::character varying CHECK (order_type::text = ANY (ARRAY['customer'::character varying, 'partner'::character varying, 'partner_for_client'::character varying]::text[])),
  shipping_address_line_1 character varying CHECK (shipping_address_line_1 IS NULL OR length(TRIM(BOTH FROM shipping_address_line_1)) > 0),
  shipping_address_line_2 character varying,
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT orders_placed_by_partner_id_fkey FOREIGN KEY (placed_by_partner_id) REFERENCES public.partners(id)
);
CREATE TABLE public.outfits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  slug character varying NOT NULL UNIQUE,
  description text,
  clothing_description text NOT NULL,
  color_scheme ARRAY DEFAULT '{}'::text[],
  style_keywords ARRAY DEFAULT '{}'::text[],
  seasonal_relevance jsonb DEFAULT '{}'::jsonb,
  animal_compatibility ARRAY DEFAULT '{dog,cat}'::text[],
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT outfits_pkey PRIMARY KEY (id)
);
CREATE TABLE public.partners (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email text NOT NULL UNIQUE,
  first_name text NOT NULL,
  last_name text NOT NULL,
  phone text,
  business_name text,
  business_type text CHECK (business_type = ANY (ARRAY['groomer'::text, 'breeder'::text, 'vet'::text, 'salon'::text, 'mobile'::text, 'independent'::text, 'chain'::text])),
  business_address jsonb,
  business_phone text,
  business_website text,
  bio text,
  avatar_url text,
  is_active boolean DEFAULT true,
  is_verified boolean DEFAULT false,
  onboarding_completed boolean DEFAULT false,
  payment_method text CHECK (payment_method = ANY (ARRAY['paypal'::text, 'bank_transfer'::text])),
  payment_details jsonb,
  notification_preferences jsonb DEFAULT '{"sms_enabled": false, "email_referrals": true, "email_commissions": true}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  approval_status text DEFAULT 'pending'::text CHECK (approval_status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text, 'suspended'::text])),
  approved_by uuid,
  approved_at timestamp with time zone,
  rejection_reason text,
  last_login_at timestamp with time zone,
  commission_rate numeric DEFAULT 20.00,
  lifetime_commission_rate numeric DEFAULT 5.00,
  logo_url text,
  CONSTRAINT partners_pkey PRIMARY KEY (id)
);
CREATE TABLE public.pet_photos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  pet_id uuid NOT NULL,
  photo_url text NOT NULL,
  is_primary boolean DEFAULT false,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT pet_photos_pkey PRIMARY KEY (id),
  CONSTRAINT pet_photos_pet_id_fkey FOREIGN KEY (pet_id) REFERENCES public.pets(id)
);
CREATE TABLE public.pets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  customer_id uuid,
  name text NOT NULL,
  breed_id uuid,
  coat_id uuid,
  age integer,
  birthday date,
  gender text CHECK (gender = ANY (ARRAY['male'::text, 'female'::text, 'unknown'::text])),
  weight numeric,
  primary_photo_url text,
  photo_urls ARRAY DEFAULT '{}'::text[],
  personality_traits ARRAY,
  special_notes text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  animal_type text NOT NULL DEFAULT 'dog'::text CHECK (animal_type = ANY (ARRAY['dog'::text, 'cat'::text])),
  CONSTRAINT pets_pkey PRIMARY KEY (id),
  CONSTRAINT pets_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT pets_breed_id_fkey FOREIGN KEY (breed_id) REFERENCES public.breeds(id),
  CONSTRAINT pets_coat_id_fkey FOREIGN KEY (coat_id) REFERENCES public.coats(id),
  CONSTRAINT pets_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.platform_analytics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  image_id uuid NOT NULL,
  platform text NOT NULL,
  total_platform_shares integer DEFAULT 0,
  unique_platform_sharers integer DEFAULT 0,
  first_shared_at timestamp with time zone,
  last_shared_at timestamp with time zone,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT platform_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT platform_analytics_image_id_fkey FOREIGN KEY (image_id) REFERENCES public.image_catalog(id)
);
CREATE TABLE public.pre_registration_codes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  code character varying NOT NULL UNIQUE CHECK (code::text ~ '^[A-Z0-9]{6,50}$'::text),
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'used'::character varying, 'expired'::character varying, 'deactivated'::character varying]::text[])),
  business_category character varying,
  expiration_date timestamp with time zone,
  marketing_campaign character varying,
  notes text,
  print_quantity integer DEFAULT 1,
  qr_code_url text,
  qr_code_data jsonb,
  partner_id uuid,
  admin_id uuid,
  scans_count integer DEFAULT 0,
  conversions_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT pre_registration_codes_pkey PRIMARY KEY (id),
  CONSTRAINT pre_registration_codes_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.partners(id)
);
CREATE TABLE public.product_pricing (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  product_id uuid NOT NULL,
  country_code text NOT NULL,
  product_cost integer NOT NULL,
  shipping_cost integer NOT NULL DEFAULT 0,
  sale_price integer NOT NULL,
  currency_code text NOT NULL,
  currency_symbol text NOT NULL,
  discount_price integer,
  is_on_sale boolean DEFAULT false,
  sale_start_date timestamp with time zone,
  sale_end_date timestamp with time zone,
  profit_amount integer,
  profit_margin_percent numeric,
  markup_percent numeric,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  effective_date timestamp without time zone DEFAULT now(),
  end_date timestamp without time zone,
  is_current boolean DEFAULT true,
  price_type character varying DEFAULT 'standard'::character varying,
  ai_generation_cost integer DEFAULT 0,
  processing_fee_percent numeric DEFAULT 0.029,
  commission_cost integer DEFAULT 0,
  total_cost_with_fees integer,
  created_by uuid,
  notes text,
  CONSTRAINT product_pricing_pkey PRIMARY KEY (id),
  CONSTRAINT product_pricing_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT product_pricing_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id),
  CONSTRAINT product_pricing_country_code_fkey FOREIGN KEY (country_code) REFERENCES public.countries(code)
);
CREATE TABLE public.products (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  medium_id uuid NOT NULL,
  format_id uuid NOT NULL,
  sku text NOT NULL UNIQUE,
  name text NOT NULL,
  description text,
  gelato_product_id text,
  gelato_variant_id text,
  is_active boolean DEFAULT true,
  is_featured boolean DEFAULT false,
  stock_status text DEFAULT 'in_stock'::text CHECK (stock_status = ANY (ARRAY['in_stock'::text, 'low_stock'::text, 'out_of_stock'::text, 'discontinued'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  size_name text,
  size_code text,
  width_cm numeric,
  height_cm numeric,
  width_inches numeric,
  height_inches numeric,
  gelato_sku text,
  CONSTRAINT products_pkey PRIMARY KEY (id),
  CONSTRAINT products_medium_id_fkey FOREIGN KEY (medium_id) REFERENCES public.media(id),
  CONSTRAINT products_format_id_fkey FOREIGN KEY (format_id) REFERENCES public.formats(id)
);
CREATE TABLE public.prompt_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  description text,
  template text NOT NULL,
  variables jsonb NOT NULL,
  ai_platform text NOT NULL DEFAULT 'midjourney'::text,
  version text DEFAULT 'v1'::text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT prompt_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.qr_code_tracking (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  image_id uuid,
  partner_id uuid,
  qr_code_data jsonb NOT NULL,
  scan_count integer DEFAULT 0,
  last_scanned_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
  CONSTRAINT qr_code_tracking_pkey PRIMARY KEY (id),
  CONSTRAINT qr_code_tracking_image_id_fkey FOREIGN KEY (image_id) REFERENCES public.image_catalog(id)
);
CREATE TABLE public.rate_limits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_key text NOT NULL,
  endpoint_pattern text NOT NULL,
  request_count integer DEFAULT 0,
  window_start timestamp with time zone NOT NULL,
  blocked_until timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT rate_limits_pkey PRIMARY KEY (id)
);
CREATE TABLE public.referral_analytics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  referral_id uuid NOT NULL,
  event_type text NOT NULL CHECK (event_type = ANY (ARRAY['qr_scan'::text, 'email_open'::text, 'link_click'::text, 'page_view'::text, 'order_start'::text, 'order_complete'::text])),
  event_data jsonb,
  ip_address inet,
  user_agent text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT referral_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT referral_analytics_referral_id_fkey FOREIGN KEY (referral_id) REFERENCES public.referrals(id)
);
CREATE TABLE public.referral_status_backup (
  id uuid,
  status text,
  created_at timestamp with time zone
);
CREATE TABLE public.referrals (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  partner_id uuid NOT NULL,
  referral_code text NOT NULL UNIQUE,
  client_name text,
  client_email text NOT NULL,
  client_phone text,
  client_notes text,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['invited'::text, 'accessed'::text, 'accepted'::text, 'applied'::text, 'expired'::text])),
  qr_code_url text,
  qr_scans integer DEFAULT 0,
  email_opens integer DEFAULT 0,
  last_viewed_at timestamp with time zone,
  order_id uuid,
  order_value numeric,
  discount_amount numeric,
  commission_rate numeric DEFAULT 20.00,
  lifetime_commission_rate numeric DEFAULT 5.00,
  commission_amount numeric,
  commission_paid boolean DEFAULT false,
  expires_at timestamp with time zone DEFAULT (now() + '30 days'::interval),
  purchased_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  pet_name text,
  pet_breed_id uuid,
  pet_coat_id uuid,
  referral_type text DEFAULT 'traditional'::text CHECK (referral_type = ANY (ARRAY['traditional'::text, 'image_share'::text])),
  image_id uuid,
  client_first_name text,
  client_last_name text,
  referrer_type character varying DEFAULT 'partner'::character varying CHECK (referrer_type::text = ANY (ARRAY['partner'::character varying, 'customer'::character varying]::text[])),
  customer_referrer_id uuid,
  pre_registration_code_id uuid,
  accessed_from_qr boolean DEFAULT false,
  conversion_source character varying,
  CONSTRAINT referrals_pkey PRIMARY KEY (id),
  CONSTRAINT referrals_image_id_fkey FOREIGN KEY (image_id) REFERENCES public.image_catalog(id),
  CONSTRAINT referrals_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.partners(id),
  CONSTRAINT referrals_pet_breed_id_fkey FOREIGN KEY (pet_breed_id) REFERENCES public.breeds(id),
  CONSTRAINT referrals_pet_coat_id_fkey FOREIGN KEY (pet_coat_id) REFERENCES public.coats(id),
  CONSTRAINT referrals_customer_referrer_id_fkey FOREIGN KEY (customer_referrer_id) REFERENCES public.customers(id),
  CONSTRAINT referrals_pre_registration_code_id_fkey FOREIGN KEY (pre_registration_code_id) REFERENCES public.pre_registration_codes(id)
);
CREATE TABLE public.share_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  image_id uuid NOT NULL,
  user_id uuid,
  user_email text,
  platform text NOT NULL,
  share_url text NOT NULL,
  user_agent text,
  ip_address inet,
  referrer text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT share_events_pkey PRIMARY KEY (id),
  CONSTRAINT share_events_image_id_fkey FOREIGN KEY (image_id) REFERENCES public.image_catalog(id),
  CONSTRAINT share_events_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.share_social_accounts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  share_event_id uuid NOT NULL,
  social_account_id uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT share_social_accounts_pkey PRIMARY KEY (id),
  CONSTRAINT share_social_accounts_share_event_id_fkey FOREIGN KEY (share_event_id) REFERENCES public.share_events(id),
  CONSTRAINT share_social_accounts_social_account_id_fkey FOREIGN KEY (social_account_id) REFERENCES public.social_accounts(id)
);
CREATE TABLE public.social_accounts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  platform text NOT NULL,
  platform_user_id text,
  username text,
  display_name text,
  profile_url text,
  follower_count integer,
  verified boolean DEFAULT false,
  last_shared_at timestamp with time zone,
  first_shared_at timestamp with time zone DEFAULT now(),
  total_shares integer DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT social_accounts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.styles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text NOT NULL,
  prompt_suffix text NOT NULL,
  technical_parameters jsonb DEFAULT '{}'::jsonb,
  compatible_themes ARRAY,
  difficulty_level integer DEFAULT 1,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  midjourney_sref text,
  reference_image_url text,
  CONSTRAINT styles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.theme_style_combinations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  theme_id uuid,
  style_id uuid,
  compatibility_score integer DEFAULT 5,
  custom_prompt_adjustments text,
  example_tags ARRAY,
  is_recommended boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  CONSTRAINT theme_style_combinations_pkey PRIMARY KEY (id),
  CONSTRAINT theme_style_combinations_theme_id_fkey FOREIGN KEY (theme_id) REFERENCES public.themes(id),
  CONSTRAINT theme_style_combinations_style_id_fkey FOREIGN KEY (style_id) REFERENCES public.styles(id)
);
CREATE TABLE public.themes (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL UNIQUE,
  slug text NOT NULL UNIQUE,
  description text NOT NULL,
  base_prompt_template text NOT NULL,
  style_keywords ARRAY,
  seasonal_relevance jsonb DEFAULT '{}'::jsonb,
  difficulty_level integer DEFAULT 1,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  updated_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
  hero_image_url text,
  hero_image_alt text,
  CONSTRAINT themes_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_interactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  session_id text,
  image_id uuid NOT NULL,
  interaction_type text NOT NULL CHECK (interaction_type = ANY (ARRAY['like'::text, 'share'::text, 'unlike'::text, 'view'::text])),
  platform text,
  user_agent text,
  ip_address inet,
  referrer text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_interactions_pkey PRIMARY KEY (id),
  CONSTRAINT user_interactions_image_id_fkey FOREIGN KEY (image_id) REFERENCES public.image_catalog(id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  user_type text NOT NULL CHECK (user_type = ANY (ARRAY['admin'::text, 'partner'::text, 'customer'::text])),
  permissions ARRAY DEFAULT '{}'::text[],
  partner_id uuid,
  customer_id uuid,
  first_name text,
  last_name text,
  email text,
  phone text,
  avatar_url text,
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'inactive'::text, 'suspended'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT user_profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT user_profiles_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.partners(id),
  CONSTRAINT user_profiles_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);